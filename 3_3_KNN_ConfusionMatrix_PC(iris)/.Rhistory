iris<-data(iris)
write.csv(iris,"./Homework_3/iris.csv")
write.csv(iris,"./iris.csv")
train_3 <-read.csv('Train_3.csv')
train_exhaustive_subset <- regsubsets(Y~., data = train_3,nvmax = 4,method = "exhaustive")
library(ggplot2)
train_exhaustive_subset <- regsubsets(Y~., data = train_3,nvmax = 4,method = "exhaustive")
############################################################################
library(dplyr)
library(leaps)
library(caret)
train_exhaustive_subset <- regsubsets(Y~., data = train_3,nvmax = 4,method = "exhaustive")
my_ex <- summary(train_exhaustive_subset)
train_fwd_subset <- regsubsets(Y~., data = train_3,nvmax = 4,method = "forward")
my_fw <- summary(train_fwd_subset)
train_bwd_subset <- regsubsets(Y~., data = train_3,nvmax = 4,method = "backward")
my_bw <- summary(train_bwd_subset)
rm(list = ls())
iris.train <-read.csv('Train_3.csv')
for (i in 1:15)
for (i in 1:15)
{
knn.fit <- knn(train = iris.train[,1:4], test = iris.test[,1:4], cl = iris.train$Species, k = i)
error[i] = 1- mean(knn.fit == iris.test$Species)
}
iris<-data(iris)''
iris<-data(iris)
write.csv(iris,"/Users/WS_LEE/Desktop/Fall_2020/DataMining/Homework_3/iris.csv")
train_3 <-read.csv('Train_3.csv')
train_exhaustive_subset <- regsubsets(Y~., data = train_3,nvmax = 4,method = "exhaustive")
my_ex <- summary(train_exhaustive_subset)
train_fwd_subset <- regsubsets(Y~., data = train_3,nvmax = 4,method = "forward")
my_fw <- summary(train_fwd_subset)
train_bwd_subset <- regsubsets(Y~., data = train_3,nvmax = 4,method = "backward")
my_bw <- summary(train_bwd_subset)
my_ex
my_fw
